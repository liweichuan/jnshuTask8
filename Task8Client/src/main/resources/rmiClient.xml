<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--这里是一个复用设置-->
    <bean id="rmiClientSetting" abstract="true">
        <!-- 是否启动时加载stub -->
        <property name="refreshEndpointsOnStartup" value="false" />
        <!-- 调用异常时，将重新加载stub -->
        <property name="refreshEndpointsOnConnectFailure" value="true" />
        <!-- 调用失败时是否切换到其他服务端 -->
        <property name="switchEndpointOnFailure" value="true" />
        <!-- 追踪拦截器启用 -->
        <property name="registerTraceInterceptor" value="true" />
        <!-- 缓存stub 继承AbstractRmiShortFormProxyFactoryBean才有-->
        <property name="cacheEndpoints" value="true" />
    </bean>


    <!-- 客户端 -->
    <bean id="studentClient"  class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!--远程服务对象接口类-->
        <property name="serviceInterface" value="com.jnshu.service.StudentService"/>
        <!--远程服务对象list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
<!--                <value>rmi://127.0.0.1:1199/studentRMI</value>-->
<!--                <value>rmi://127.0.0.1:1299/studentRMI</value>-->
                <value>rmi://101.132.124.42:1199/studentRMI</value>
                <value>rmi://101.132.124.42:1299/studentRMI</value>
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
    <!-- 客户端 -->
    <bean id="userClient"  class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!--远程服务对象接口类-->
        <property name="serviceInterface" value="com.jnshu.service.UserService"/>
        <!--远程服务对象list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
<!--                <value>rmi://127.0.0.1:1199/userRMI</value>-->
<!--                <value>rmi://127.0.0.1:1299/userRMI</value>-->
                <value>rmi://101.132.124.42:1199/userRMI</value>
                <value>rmi://101.132.124.42:1299/userRMI</value>
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
    <!-- 客户端 -->
    <bean id="mailClient"  class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!--远程服务对象接口类-->
        <property name="serviceInterface" value="com.jnshu.service.MailService"/>
        <!--远程服务对象list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
                <value>rmi://101.132.124.42:1199/mailRMI</value>
                <value>rmi://101.132.124.42:1299/mailRMI</value>
<!--                <value>rmi://127.0.0.1:1199/mailRMI</value>-->
<!--                <value>rmi://127.0.0.1:1299/mailRMI</value>-->
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
    <!-- 客户端 -->
    <bean id="messageClient"  class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!--远程服务对象接口类-->
        <property name="serviceInterface" value="com.jnshu.service.MessageService"/>
        <!--远程服务对象list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
                <value>rmi://101.132.124.42:1199/messageRMI</value>
                <value>rmi://101.132.124.42:1299/messageRMI</value>
<!--                <value>rmi://127.0.0.1:1199/messageRMI</value>-->
<!--                <value>rmi://127.0.0.1:1299/messageRMI</value>-->
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
    <!-- 客户端 -->
    <bean id="redisClient"  class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!--远程服务对象接口类-->
        <property name="serviceInterface" value="com.jnshu.service.RedisService"/>
        <!--远程服务对象list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
                <value>rmi://101.132.124.42:1199/redisRMI</value>
                <value>rmi://101.132.124.42:1299/redisRMI</value>
<!--                <value>rmi://127.0.0.1:1199/redisRMI</value>-->
<!--                <value>rmi://127.0.0.1:1299/redisRMI</value>-->
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
    <!-- 客户端 -->
    <bean id="uploadClient"  class="org.softamis.cluster4spring.rmi.RmiUrlListProxyFactoryBean" parent="rmiClientSetting">
        <!--远程服务对象接口类-->
        <property name="serviceInterface" value="com.jnshu.service.UploadService"/>
        <!--远程服务对象list ，如果第一个无法使用，会抛异常，然后使用第二个去调用远程对象方法返回结果-->
        <property name="serviceURLs">
            <list>
                <value>rmi://101.132.124.42:1199/uploadRMI</value>
                <value>rmi://101.132.124.42:1299/uploadRMI</value>
<!--                <value>rmi://127.0.0.1:1199/uploadRMI</value>-->
<!--                <value>rmi://127.0.0.1:1299/uploadRMI</value>-->
            </list>
        </property>
        <!-- 调用时选择那个url的策略 -->
        <property name="endpointSelectionPolicy">
            <bean class="org.softamis.cluster4spring.support.invocation.ShuffleEndpointSelectionPolicy"/>
        </property>
    </bean>
</beans>